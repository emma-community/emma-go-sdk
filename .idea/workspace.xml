<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="065b05ac-7ad1-4813-a1e7-86bb7bbd4189" name="Changes" comment="Init">
      <change afterPath="$PROJECT_DIR$/.idea/emma-go-sdk.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api_security_groups.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api_spot_instances.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/ConflictError.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/SecurityGroup.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/SecurityGroupInstance.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/SecurityGroupInstanceAdd.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/SecurityGroupInstanceCost.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/SecurityGroupInstanceDataCenter.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/SecurityGroupInstanceDisksInner.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/SecurityGroupInstanceLocation.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/SecurityGroupInstanceNetworksInner.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/SecurityGroupInstanceOs.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/SecurityGroupInstanceProvider.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/SecurityGroupInstanceSecurityGroup.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/SecurityGroupRequest.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/SecurityGroupRule.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/SecurityGroupRuleRequest.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/SecurityGroupsAPI.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/SpotActionsRequest.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/SpotCreate.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/SpotInstancesAPI.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/SpotReboot.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/UnprocessableEntityError.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/model_conflict_error.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/model_security_group.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/model_security_group_instance.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/model_security_group_instance_add.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/model_security_group_instance_cost.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/model_security_group_instance_data_center.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/model_security_group_instance_disks_inner.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/model_security_group_instance_location.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/model_security_group_instance_networks_inner.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/model_security_group_instance_os.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/model_security_group_instance_provider.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/model_security_group_instance_security_group.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/model_security_group_request.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/model_security_group_rule.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/model_security_group_rule_request.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/model_spot_actions_request.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/model_spot_create.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/model_spot_reboot.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/model_unprocessable_entity_error.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/api_security_groups_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/api_spot_instances_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.openapi-generator/FILES" beforeDir="false" afterPath="$PROJECT_DIR$/.openapi-generator/FILES" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/openapi.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/api/openapi.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api_authentication.go" beforeDir="false" afterPath="$PROJECT_DIR$/api_authentication.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api_compute_instances_configurations.go" beforeDir="false" afterPath="$PROJECT_DIR$/api_compute_instances_configurations.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api_data_centers.go" beforeDir="false" afterPath="$PROJECT_DIR$/api_data_centers.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api_locations.go" beforeDir="false" afterPath="$PROJECT_DIR$/api_locations.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api_operating_systems.go" beforeDir="false" afterPath="$PROJECT_DIR$/api_operating_systems.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api_providers.go" beforeDir="false" afterPath="$PROJECT_DIR$/api_providers.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api_ssh_keys.go" beforeDir="false" afterPath="$PROJECT_DIR$/api_ssh_keys.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api_virtual_machines.go" beforeDir="false" afterPath="$PROJECT_DIR$/api_virtual_machines.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/client.go" beforeDir="false" afterPath="$PROJECT_DIR$/client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/configuration.go" beforeDir="false" afterPath="$PROJECT_DIR$/configuration.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/AuthenticationAPI.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/AuthenticationAPI.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/BadRequestError.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/BadRequestError.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/ComputeInstancesConfigurationsAPI.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/ComputeInstancesConfigurationsAPI.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/Credentials.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/Credentials.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/DataCenter.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/DataCenter.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/DataCentersAPI.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/DataCentersAPI.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/ForbiddenError.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/ForbiddenError.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/GetVmConfigs200Response.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/GetVmConfigs200Response.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/Location.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/Location.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/LocationsAPI.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/LocationsAPI.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/NotFoundError.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/NotFoundError.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/OperatingSystem.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/OperatingSystem.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/OperatingSystemsAPI.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/OperatingSystemsAPI.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/PageableObject.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/PageableObject.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/PaginatedResult.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/PaginatedResult.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/Provider.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/Provider.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/ProvidersAPI.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/ProvidersAPI.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/RefreshToken.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/RefreshToken.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/SSHKeysAPI.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/SSHKeysAPI.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/SortObject.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/SortObject.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/SshKey.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/SshKey.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/SshKeyCreate.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/SshKeyCreate.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/SshKeyGenerated.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/SshKeyGenerated.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/SshKeyImport.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/SshKeyImport.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/SshKeyUpdate.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/SshKeyUpdate.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/SshKeysCreateImport201Response.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/SshKeysCreateImport201Response.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/SshKeysCreateImportRequest.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/SshKeysCreateImportRequest.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/Token.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/Token.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/UnauthorizedError.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/UnauthorizedError.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/VirtualMachinesAPI.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/VirtualMachinesAPI.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/Vm.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/Vm.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/VmActionsRequest.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/VmActionsRequest.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/VmClone.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/VmClone.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/VmConfiguration.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/VmConfiguration.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/VmConfigurationCost.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/VmConfigurationCost.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/VmCost.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/VmCost.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/VmCreate.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/VmCreate.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/VmDataCenter.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/VmDataCenter.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/VmDisksInner.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/VmDisksInner.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/VmEditHardware.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/VmEditHardware.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/VmLocation.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/VmLocation.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/VmNetworksInner.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/VmNetworksInner.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/VmOs.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/VmOs.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/VmProvider.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/VmProvider.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/VmReboot.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/VmReboot.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/VmSecurityGroup.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/VmSecurityGroup.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/VmShutdown.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/VmShutdown.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/VmStart.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/VmStart.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/VmTransfer.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/VmTransfer.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/git_push.sh" beforeDir="false" afterPath="$PROJECT_DIR$/git_push.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_bad_request_error.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_bad_request_error.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_credentials.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_credentials.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_data_center.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_data_center.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_forbidden_error.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_forbidden_error.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_get_vm_configs_200_response.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_get_vm_configs_200_response.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_location.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_location.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_not_found_error.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_not_found_error.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_operating_system.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_operating_system.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_pageable_object.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_pageable_object.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_paginated_result.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_paginated_result.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_provider.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_provider.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_refresh_token.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_refresh_token.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_sort_object.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_sort_object.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_ssh_key.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_ssh_key.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_ssh_key_create.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_ssh_key_create.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_ssh_key_generated.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_ssh_key_generated.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_ssh_key_import.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_ssh_key_import.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_ssh_key_update.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_ssh_key_update.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_ssh_keys_create_import_201_response.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_ssh_keys_create_import_201_response.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_ssh_keys_create_import_request.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_ssh_keys_create_import_request.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_token.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_token.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_unauthorized_error.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_unauthorized_error.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_vm.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_vm.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_vm_actions_request.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_vm_actions_request.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_vm_clone.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_vm_clone.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_vm_configuration.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_vm_configuration.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_vm_configuration_cost.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_vm_configuration_cost.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_vm_cost.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_vm_cost.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_vm_create.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_vm_create.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_vm_data_center.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_vm_data_center.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_vm_disks_inner.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_vm_disks_inner.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_vm_edit_hardware.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_vm_edit_hardware.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_vm_location.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_vm_location.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_vm_networks_inner.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_vm_networks_inner.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_vm_os.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_vm_os.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_vm_provider.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_vm_provider.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_vm_reboot.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_vm_reboot.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_vm_security_group.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_vm_security_group.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_vm_shutdown.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_vm_shutdown.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_vm_start.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_vm_start.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model_vm_transfer.go" beforeDir="false" afterPath="$PROJECT_DIR$/model_vm_transfer.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/open-api.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/response.go" beforeDir="false" afterPath="$PROJECT_DIR$/response.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/api_authentication_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/test/api_authentication_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/api_compute_instances_configurations_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/test/api_compute_instances_configurations_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/api_data_centers_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/test/api_data_centers_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/api_locations_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/test/api_locations_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/api_operating_systems_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/test/api_operating_systems_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/api_providers_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/test/api_providers_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/api_ssh_keys_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/test/api_ssh_keys_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/api_virtual_machines_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/test/api_virtual_machines_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/utils.go" beforeDir="false" afterPath="$PROJECT_DIR$/utils.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;DenisTyunin&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;git@github.com:emma-community/emma-go-sdk.git&quot;,
    &quot;accountId&quot;: &quot;67a69f20-e5cb-4313-b15a-f99e489c2492&quot;
  }
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 6
}</component>
  <component name="ProjectId" id="2fSYrfBQR9EIupd9em4kDUR8rbb" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Go Test.Test_emma_AuthenticationAPIService/Test_AuthenticationAPIService_IssueToken in github.com/MandarinSolutions/emma-go-sdk/test.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.Test_emma_ComputeInstancesConfigurationsAPIService/Test_ComputeInstancesConfigurationsAPIService_GetSpotConfigs in github.com/MandarinSolutions/emma-go-sdk/test.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.Test_emma_LocationsAPIService in github.com/MandarinSolutions/emma-go-sdk/test.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.automatic.dependencies.download&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/denistyunin/WorkSpace/emma/emma-go-sdk&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;org.jetbrains.plugins.github.ui.GithubSettingsConfigurable&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.Test_emma_AuthenticationAPIService/Test_AuthenticationAPIService_IssueToken in github.com/emma-community/emma-go-sdk/test">
    <configuration name="Test_emma_AuthenticationAPIService/Test_AuthenticationAPIService_IssueToken in github.com/MandarinSolutions/emma-go-sdk/test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="emma-go-sdk" />
      <working_directory value="$PROJECT_DIR$/test" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/MandarinSolutions/emma-go-sdk/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTest_emma_AuthenticationAPIService\E$/^\QTest_AuthenticationAPIService_IssueToken\E$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_emma_AuthenticationAPIService/Test_AuthenticationAPIService_IssueToken in github.com/MandarinSolutions/emma-go-sdk/test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="emma-go-sdk" />
      <working_directory value="$PROJECT_DIR$/test" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/MandarinSolutions/emma-go-sdk/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTest_emma_AuthenticationAPIService\E$/^\QTest_AuthenticationAPIService_IssueToken\E$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_emma_AuthenticationAPIService/Test_AuthenticationAPIService_IssueToken in github.com/emma-community/emma-go-sdk/test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="emma-go-sdk" />
      <working_directory value="$PROJECT_DIR$/test" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/emma-community/emma-go-sdk/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTest_emma_AuthenticationAPIService\E$/^\QTest_AuthenticationAPIService_IssueToken\E$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_emma_ComputeInstancesConfigurationsAPIService/Test_ComputeInstancesConfigurationsAPIService_GetSpotConfigs in github.com/MandarinSolutions/emma-go-sdk/test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="emma-go-sdk" />
      <working_directory value="$PROJECT_DIR$/test" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/MandarinSolutions/emma-go-sdk/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTest_emma_ComputeInstancesConfigurationsAPIService\E$/^\QTest_ComputeInstancesConfigurationsAPIService_GetSpotConfigs\E$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_emma_ComputeInstancesConfigurationsAPIService/Test_ComputeInstancesConfigurationsAPIService_GetSpotConfigs in github.com/MandarinSolutions/emma-go-sdk/test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="emma-go-sdk" />
      <working_directory value="$PROJECT_DIR$/test" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/MandarinSolutions/emma-go-sdk/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTest_emma_ComputeInstancesConfigurationsAPIService\E$/^\QTest_ComputeInstancesConfigurationsAPIService_GetSpotConfigs\E$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_emma_LocationsAPIService in github.com/MandarinSolutions/emma-go-sdk/test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="emma-go-sdk" />
      <working_directory value="$PROJECT_DIR$/test" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/MandarinSolutions/emma-go-sdk/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTest_emma_LocationsAPIService\E$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_emma_LocationsAPIService in github.com/MandarinSolutions/emma-go-sdk/test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="emma-go-sdk" />
      <working_directory value="$PROJECT_DIR$/test" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/MandarinSolutions/emma-go-sdk/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTest_emma_LocationsAPIService\E$" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.Test_emma_AuthenticationAPIService/Test_AuthenticationAPIService_IssueToken in github.com/emma-community/emma-go-sdk/test" />
        <item itemvalue="Go Test.Test_emma_LocationsAPIService in github.com/MandarinSolutions/emma-go-sdk/test" />
        <item itemvalue="Go Test.Test_emma_AuthenticationAPIService/Test_AuthenticationAPIService_IssueToken in github.com/MandarinSolutions/emma-go-sdk/test" />
        <item itemvalue="Go Test.Test_emma_ComputeInstancesConfigurationsAPIService/Test_ComputeInstancesConfigurationsAPIService_GetSpotConfigs in github.com/MandarinSolutions/emma-go-sdk/test" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9f38398b9061-39b83d9b5494-intellij.indexing.shared.core-IU-241.15989.150" />
        <option value="bundled-js-predefined-1d06a55b98c1-91d5c284f522-JavaScript-IU-241.15989.150" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="065b05ac-7ad1-4813-a1e7-86bb7bbd4189" name="Changes" comment="" />
      <created>1659591905978</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1659591905978</updated>
      <workItem from="1713796147271" duration="2272000" />
      <workItem from="1713852004019" duration="6141000" />
      <workItem from="1713887779154" duration="598000" />
      <workItem from="1713888763013" duration="1298000" />
      <workItem from="1713940981523" duration="5927000" />
      <workItem from="1714024647903" duration="600000" />
      <workItem from="1714123859569" duration="1408000" />
      <workItem from="1714643304516" duration="1443000" />
      <workItem from="1714647705127" duration="592000" />
      <workItem from="1714718359487" duration="2041000" />
    </task>
    <task id="LOCAL-00001" summary="Fix Vm creation response model">
      <option name="closed" value="true" />
      <created>1713891706531</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1713891706531</updated>
    </task>
    <task id="LOCAL-00002" summary="Add release workflow">
      <option name="closed" value="true" />
      <created>1713952038672</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1713952038672</updated>
    </task>
    <task id="LOCAL-00003" summary="Fix release workflow">
      <option name="closed" value="true" />
      <created>1713952603331</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1713952603331</updated>
    </task>
    <task id="LOCAL-00004" summary="Add goreleaser file">
      <option name="closed" value="true" />
      <created>1713952886556</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1713952886556</updated>
    </task>
    <task id="LOCAL-00005" summary="Fix release deprecated value">
      <option name="closed" value="true" />
      <created>1713954078985</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1713954078985</updated>
    </task>
    <task id="LOCAL-00006" summary="Init">
      <option name="closed" value="true" />
      <created>1714720108475</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1714720108475</updated>
    </task>
    <option name="localTasksCounter" value="7" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Fix Vm creation response model" />
    <MESSAGE value="Add release workflow" />
    <MESSAGE value="Fix release workflow" />
    <MESSAGE value="Add goreleaser file" />
    <MESSAGE value="Fix release deprecated value" />
    <MESSAGE value="Init" />
    <option name="LAST_COMMIT_MESSAGE" value="Init" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>