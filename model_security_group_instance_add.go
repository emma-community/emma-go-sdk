/*
Public EMMA API

**Base URL:** *<u>https://api.emma.ms/external</u>*  This **Infrastructure API** is for managing the cloud infrastructure within a project.  To access the API, enter your project, navigate to **Settings** > **Service Apps**, and create a service application. Select the access level **Read**, **Operate**, or **Manage**.  After creating the service application, copy the **Client ID** and **Client Secret**. Send an API request to the endpoint **_/issue-token** as specified in the **Authentication** section of the API documentation. You will receive access and refresh tokens in the response.  The Bearer access token is a text string, included in the request header, example:  *-H Authorization: Bearer {token}*  Use this token for API requests. The access token will expire in 10 minutes. A new access token may be created using the refresh token (without Client ID and Client Secret).

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package emma

import (
	"encoding/json"
)

// checks if the SecurityGroupInstanceAdd type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityGroupInstanceAdd{}

// SecurityGroupInstanceAdd struct for SecurityGroupInstanceAdd
type SecurityGroupInstanceAdd struct {
	InstanceId *int32 `json:"instanceId,omitempty"`
}

// NewSecurityGroupInstanceAdd instantiates a new SecurityGroupInstanceAdd object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityGroupInstanceAdd() *SecurityGroupInstanceAdd {
	this := SecurityGroupInstanceAdd{}
	return &this
}

// NewSecurityGroupInstanceAddWithDefaults instantiates a new SecurityGroupInstanceAdd object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityGroupInstanceAddWithDefaults() *SecurityGroupInstanceAdd {
	this := SecurityGroupInstanceAdd{}
	return &this
}

// GetInstanceId returns the InstanceId field value if set, zero value otherwise.
func (o *SecurityGroupInstanceAdd) GetInstanceId() int32 {
	if o == nil || IsNil(o.InstanceId) {
		var ret int32
		return ret
	}
	return *o.InstanceId
}

// GetInstanceIdOk returns a tuple with the InstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupInstanceAdd) GetInstanceIdOk() (*int32, bool) {
	if o == nil || IsNil(o.InstanceId) {
		return nil, false
	}
	return o.InstanceId, true
}

// HasInstanceId returns a boolean if a field has been set.
func (o *SecurityGroupInstanceAdd) HasInstanceId() bool {
	if o != nil && !IsNil(o.InstanceId) {
		return true
	}

	return false
}

// SetInstanceId gets a reference to the given int32 and assigns it to the InstanceId field.
func (o *SecurityGroupInstanceAdd) SetInstanceId(v int32) {
	o.InstanceId = &v
}

func (o SecurityGroupInstanceAdd) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityGroupInstanceAdd) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InstanceId) {
		toSerialize["instanceId"] = o.InstanceId
	}
	return toSerialize, nil
}

type NullableSecurityGroupInstanceAdd struct {
	value *SecurityGroupInstanceAdd
	isSet bool
}

func (v NullableSecurityGroupInstanceAdd) Get() *SecurityGroupInstanceAdd {
	return v.value
}

func (v *NullableSecurityGroupInstanceAdd) Set(val *SecurityGroupInstanceAdd) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityGroupInstanceAdd) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityGroupInstanceAdd) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityGroupInstanceAdd(val *SecurityGroupInstanceAdd) *NullableSecurityGroupInstanceAdd {
	return &NullableSecurityGroupInstanceAdd{value: val, isSet: true}
}

func (v NullableSecurityGroupInstanceAdd) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityGroupInstanceAdd) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
