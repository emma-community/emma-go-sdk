/*
Public EMMA API

### About Infrastructure API  **Base URL:** **<u>https://api.emma.ms/external</u>**   This **Infrastructure API** is for managing the emma cloud infrastructure within a project. The API enables you to view, create, edit, and delete _Virtual machines, Spot instances, Applications, Kubernetes clusters, SSH keys, Security groups, and Backup policies_. For creating the resources you can use the endpoints with the dictionaries: _Data centers, Locations, Providers, Operating systems, Virtual machines configurations, Spot instances configurations, Kubernetes clusters configurations._   ### Authentication   #### 1. Create service application   To access the API, enter your project, navigate to **Settings** > **Service Apps**, and create a service application. Select the access level **Read**, **Operate**, or **Manage**.   - **Read** - only GET methods are allowed in the API.   - **Operate** - some operations are allowed with the resources (e.g. _Start, Reboot,_ and _Shutdown_ of the Virtual machines).   - **Manage** - full creating, updating, and deleting of the resources is allowed.    #### 2. Get access token   - Copy the **Client ID** and **Client Secret** in the service application.  - Send an API request to the endpoint **_/issue-token** as specified in the **Authentication** section of the API documentation. You will receive access and refresh tokens in the response.   _For Linux / Mac:_  ```  curl -X POST https://api.emma.ms/external/v1/issue-token \\  -H \"Content-Type: application/json\" \\  -d '{\"clientId\": \"YOUR-CLIENT-ID\", \"clientSecret\": \"YOUR-CLIENT-SECRET\"}'  ```  _For Windows:_  ```  curl -X POST https://api.emma.ms/external/v1/issue-token ^  -H \"Content-Type: application/json\" ^  -d \"{\\\"clientId\\\": \\\"YOUR-CLIENT-ID\\\", \\\"clientSecret\\\": \\\"YOUR-CLIENT-SECRET\\\"}\"  ```   #### 3. Use access token in requests  The Bearer access token is a text string, included in the request header, for example:   _For Linux / Mac:_  ```  curl -X GET https://api.emma.ms/external/v1/locations -H \"Authorization: Bearer YOUR-ACCESS-TOKEN-HERE\"  ```   Use this token for the API requests.    #### 4. Refresh token  The access token will expire in 10 minutes. A new access token may be created using the refresh token (without Client ID and Client Secret).   To get a new access token send a request to the **_/refresh-token** endpoint:    _For Linux / Mac:_  ```  curl -X POST https://api.emma.ms/external/v1/refresh-token \\  -H \"Content-Type: application/json\" \\  -d '{\"refreshToken\": \"YOUR-REFRESH-TOKEN\"}'  ```       ### Possible response status codes   We use standard HTTP response codes to show the success or failure of requests.   `2xx` - successful responses.   `4xx` - client error responses (the response contains an explanation of the error).   `5xx` - server error responses.   The API uses the following status codes:   | Status Code | Description                  | Notes                                                                  |  |-------------|------------------------------|------------------------------------------------------------------------|  | 200         | OK                           | The request was successful.                                             |  | 201         | Created                      | The object was successfully created. This code is only used with objects that are created immediately.  | 204         | No content                   | A successful request, but there is no additional information to send back in the response body (in a case when the object was deleted).    | 400         | Bad Request                  | The request could not be understood by the server. Incoming parameters might not be valid. |  | 401         | Unauthorized            | The client is unauthenticated. The client must authenticate itself to get the requested response. |  | 403         | Forbidden                   | The client does not have access rights to the content.  | 404         | Not Found                    | The requested resource is not found.                                    |  | 409         | Conflict | This response is sent when a request conflicts with the current state of the object (e.g. deleting the security group with the compute instances in it).|  | 422         | Unprocessable Content   | The request was well-formed but was unable to be followed due to incorrect field values (e.g. creation of a virtual machine in the non-existent data center).  |  | 500         | Internal server Error                 | The server could not return the representation due to an internal server error. | 

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package emma

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the KubernetesClusterObjectStatesQueryFilters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubernetesClusterObjectStatesQueryFilters{}

// KubernetesClusterObjectStatesQueryFilters List of aditional parameters
type KubernetesClusterObjectStatesQueryFilters struct {
	// Type of kubernetes cluster object
	ObjectType string `json:"objectType"`
	// Name of the object for which the user requests a list of metrics
	ObjectName string `json:"objectName"`
	// Kubernetes object breakdown
	BreakdownLevel string `json:"breakdownLevel"`
	// List of metrics describing state of objects in the cluster
	ObjectStatesMetrics []string `json:"objectStatesMetrics"`
}

type _KubernetesClusterObjectStatesQueryFilters KubernetesClusterObjectStatesQueryFilters

// NewKubernetesClusterObjectStatesQueryFilters instantiates a new KubernetesClusterObjectStatesQueryFilters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubernetesClusterObjectStatesQueryFilters(objectType string, objectName string, breakdownLevel string, objectStatesMetrics []string) *KubernetesClusterObjectStatesQueryFilters {
	this := KubernetesClusterObjectStatesQueryFilters{}
	this.ObjectType = objectType
	this.ObjectName = objectName
	this.BreakdownLevel = breakdownLevel
	this.ObjectStatesMetrics = objectStatesMetrics
	return &this
}

// NewKubernetesClusterObjectStatesQueryFiltersWithDefaults instantiates a new KubernetesClusterObjectStatesQueryFilters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesClusterObjectStatesQueryFiltersWithDefaults() *KubernetesClusterObjectStatesQueryFilters {
	this := KubernetesClusterObjectStatesQueryFilters{}
	return &this
}

// GetObjectType returns the ObjectType field value
func (o *KubernetesClusterObjectStatesQueryFilters) GetObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *KubernetesClusterObjectStatesQueryFilters) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *KubernetesClusterObjectStatesQueryFilters) SetObjectType(v string) {
	o.ObjectType = v
}

// GetObjectName returns the ObjectName field value
func (o *KubernetesClusterObjectStatesQueryFilters) GetObjectName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectName
}

// GetObjectNameOk returns a tuple with the ObjectName field value
// and a boolean to check if the value has been set.
func (o *KubernetesClusterObjectStatesQueryFilters) GetObjectNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectName, true
}

// SetObjectName sets field value
func (o *KubernetesClusterObjectStatesQueryFilters) SetObjectName(v string) {
	o.ObjectName = v
}

// GetBreakdownLevel returns the BreakdownLevel field value
func (o *KubernetesClusterObjectStatesQueryFilters) GetBreakdownLevel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BreakdownLevel
}

// GetBreakdownLevelOk returns a tuple with the BreakdownLevel field value
// and a boolean to check if the value has been set.
func (o *KubernetesClusterObjectStatesQueryFilters) GetBreakdownLevelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BreakdownLevel, true
}

// SetBreakdownLevel sets field value
func (o *KubernetesClusterObjectStatesQueryFilters) SetBreakdownLevel(v string) {
	o.BreakdownLevel = v
}

// GetObjectStatesMetrics returns the ObjectStatesMetrics field value
func (o *KubernetesClusterObjectStatesQueryFilters) GetObjectStatesMetrics() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ObjectStatesMetrics
}

// GetObjectStatesMetricsOk returns a tuple with the ObjectStatesMetrics field value
// and a boolean to check if the value has been set.
func (o *KubernetesClusterObjectStatesQueryFilters) GetObjectStatesMetricsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ObjectStatesMetrics, true
}

// SetObjectStatesMetrics sets field value
func (o *KubernetesClusterObjectStatesQueryFilters) SetObjectStatesMetrics(v []string) {
	o.ObjectStatesMetrics = v
}

func (o KubernetesClusterObjectStatesQueryFilters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubernetesClusterObjectStatesQueryFilters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["objectType"] = o.ObjectType
	toSerialize["objectName"] = o.ObjectName
	toSerialize["breakdownLevel"] = o.BreakdownLevel
	toSerialize["objectStatesMetrics"] = o.ObjectStatesMetrics
	return toSerialize, nil
}

func (o *KubernetesClusterObjectStatesQueryFilters) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"objectType",
		"objectName",
		"breakdownLevel",
		"objectStatesMetrics",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varKubernetesClusterObjectStatesQueryFilters := _KubernetesClusterObjectStatesQueryFilters{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varKubernetesClusterObjectStatesQueryFilters)

	if err != nil {
		return err
	}

	*o = KubernetesClusterObjectStatesQueryFilters(varKubernetesClusterObjectStatesQueryFilters)

	return err
}

type NullableKubernetesClusterObjectStatesQueryFilters struct {
	value *KubernetesClusterObjectStatesQueryFilters
	isSet bool
}

func (v NullableKubernetesClusterObjectStatesQueryFilters) Get() *KubernetesClusterObjectStatesQueryFilters {
	return v.value
}

func (v *NullableKubernetesClusterObjectStatesQueryFilters) Set(val *KubernetesClusterObjectStatesQueryFilters) {
	v.value = val
	v.isSet = true
}

func (v NullableKubernetesClusterObjectStatesQueryFilters) IsSet() bool {
	return v.isSet
}

func (v *NullableKubernetesClusterObjectStatesQueryFilters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubernetesClusterObjectStatesQueryFilters(val *KubernetesClusterObjectStatesQueryFilters) *NullableKubernetesClusterObjectStatesQueryFilters {
	return &NullableKubernetesClusterObjectStatesQueryFilters{value: val, isSet: true}
}

func (v NullableKubernetesClusterObjectStatesQueryFilters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubernetesClusterObjectStatesQueryFilters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


