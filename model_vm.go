/*
Public EMMA API

### About Infrastructure API  **Base URL:** **<u>https://api.emma.ms/external</u>**   This **Infrastructure API** is for managing the emma cloud infrastructure within a project. The API enables you to view, create, edit, and delete _Virtual machines, Spot instances, Applications, Kubernetes clusters, SSH keys, Security groups, and Backup policies_. For creating the resources you can use the endpoints with the dictionaries: _Data centers, Locations, Providers, Operating systems, Virtual machines configurations, Spot instances configurations, Kubernetes clusters configurations._   ### Authentication   #### 1. Create service application   To access the API, enter your project, navigate to **Settings** > **Service Apps**, and create a service application. Select the access level **Read**, **Operate**, or **Manage**.   - **Read** - only GET methods are allowed in the API.   - **Operate** - some operations are allowed with the resources (e.g. _Start, Reboot,_ and _Shutdown_ of the Virtual machines).   - **Manage** - full creating, updating, and deleting of the resources is allowed.    #### 2. Get access token   - Copy the **Client ID** and **Client Secret** in the service application.  - Send an API request to the endpoint **_/issue-token** as specified in the **Authentication** section of the API documentation. You will receive access and refresh tokens in the response.   _For Linux / Mac:_  ```  curl -X POST https://api.emma.ms/external/v1/issue-token \\  -H \"Content-Type: application/json\" \\  -d '{\"clientId\": \"YOUR-CLIENT-ID\", \"clientSecret\": \"YOUR-CLIENT-SECRET\"}'  ```  _For Windows:_  ```  curl -X POST https://api.emma.ms/external/v1/issue-token ^  -H \"Content-Type: application/json\" ^  -d \"{\\\"clientId\\\": \\\"YOUR-CLIENT-ID\\\", \\\"clientSecret\\\": \\\"YOUR-CLIENT-SECRET\\\"}\"  ```   #### 3. Use access token in requests  The Bearer access token is a text string, included in the request header, for example:   _For Linux / Mac:_  ```  curl -X GET https://api.emma.ms/external/v1/locations -H \"Authorization: Bearer YOUR-ACCESS-TOKEN-HERE\"  ```   Use this token for the API requests.    #### 4. Refresh token  The access token will expire in 10 minutes. A new access token may be created using the refresh token (without Client ID and Client Secret).   To get a new access token send a request to the **_/refresh-token** endpoint:    _For Linux / Mac:_  ```  curl -X POST https://api.emma.ms/external/v1/refresh-token \\  -H \"Content-Type: application/json\" \\  -d '{\"refreshToken\": \"YOUR-REFRESH-TOKEN\"}'  ```       ### Possible response status codes   We use standard HTTP response codes to show the success or failure of requests.   `2xx` - successful responses.   `4xx` - client error responses (the response contains an explanation of the error).   `5xx` - server error responses.   The API uses the following status codes:   | Status Code | Description                  | Notes                                                                  |  |-------------|------------------------------|------------------------------------------------------------------------|  | 200         | OK                           | The request was successful.                                             |  | 201         | Created                      | The object was successfully created. This code is only used with objects that are created immediately.  | 204         | No content                   | A successful request, but there is no additional information to send back in the response body (in a case when the object was deleted).    | 400         | Bad Request                  | The request could not be understood by the server. Incoming parameters might not be valid. |  | 401         | Unauthorized            | The client is unauthenticated. The client must authenticate itself to get the requested response. |  | 403         | Forbidden                   | The client does not have access rights to the content.  | 404         | Not Found                    | The requested resource is not found.                                    |  | 409         | Conflict | This response is sent when a request conflicts with the current state of the object (e.g. deleting the security group with the compute instances in it).|  | 422         | Unprocessable Content   | The request was well-formed but was unable to be followed due to incorrect field values (e.g. creation of a virtual machine in the non-existent data center).  |  | 500         | Internal server Error                 | The server could not return the representation due to an internal server error. | 

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package emma

import (
	"encoding/json"
)

// checks if the Vm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Vm{}

// Vm struct for Vm
type Vm struct {
	// ID of the virtual machine
	Id *int32 `json:"id,omitempty"`
	// Date and time when the virtual machine was created
	CreatedAt *string `json:"createdAt,omitempty"`
	// Name of the user who created the virtual machine
	CreatedByName *string `json:"createdByName,omitempty"`
	// ID of the user who created the virtual machine
	CreatedById *int32 `json:"createdById,omitempty"`
	// Date and time when the virtual machine was last edited
	ModifiedAt *string `json:"modifiedAt,omitempty"`
	// Name of the user who last edited the virtual machine
	ModifiedByName *string `json:"modifiedByName,omitempty"`
	// ID of the user who last edited the virtual machine
	ModifiedById *int32 `json:"modifiedById,omitempty"`
	// Name of the virtual machine
	Name *string `json:"name,omitempty"`
	// Project ID
	ProjectId *int32 `json:"projectId,omitempty"`
	// Status of the virtual machine
	Status *string `json:"status,omitempty"`
	Provider *VmProvider `json:"provider,omitempty"`
	Location *VmLocation `json:"location,omitempty"`
	DataCenter *VmDataCenter `json:"dataCenter,omitempty"`
	Os *VmOs `json:"os,omitempty"`
	// Number of virtual Central Processing Units (vCPUs)
	VCpu *int32 `json:"vCpu,omitempty"`
	// Type of virtual Central Processing Units (vCPUs)
	VCpuType *string `json:"vCpuType,omitempty"`
	// Cloud network type
	CloudNetworkType *string `json:"cloudNetworkType,omitempty"`
	// Capacity of the RAM in gigabytes
	RamGb *int32 `json:"ramGb,omitempty"`
	// List of volumes
	Disks []KubernetesNodeGroupsInnerNodesInnerDisksInner `json:"disks,omitempty"`
	// 
	Networks []KubernetesNodeGroupsInnerNodesInnerNetworksInner `json:"networks,omitempty"`
	SecurityGroup *VmSecurityGroup `json:"securityGroup,omitempty"`
	Subnetwork *VmSubnetwork `json:"subnetwork,omitempty"`
	// SSH key ID
	SshKeyId *int32 `json:"sshKeyId,omitempty"`
	// User name
	UserName *string `json:"userName,omitempty"`
	// User password
	UserPassword *string `json:"userPassword,omitempty"`
	Cost *VmCost `json:"cost,omitempty"`
	Tags []Tag `json:"tags,omitempty"`
}

// NewVm instantiates a new Vm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVm() *Vm {
	this := Vm{}
	return &this
}

// NewVmWithDefaults instantiates a new Vm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVmWithDefaults() *Vm {
	this := Vm{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Vm) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Vm) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *Vm) SetId(v int32) {
	o.Id = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Vm) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Vm) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *Vm) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetCreatedByName returns the CreatedByName field value if set, zero value otherwise.
func (o *Vm) GetCreatedByName() string {
	if o == nil || IsNil(o.CreatedByName) {
		var ret string
		return ret
	}
	return *o.CreatedByName
}

// GetCreatedByNameOk returns a tuple with the CreatedByName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetCreatedByNameOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedByName) {
		return nil, false
	}
	return o.CreatedByName, true
}

// HasCreatedByName returns a boolean if a field has been set.
func (o *Vm) HasCreatedByName() bool {
	if o != nil && !IsNil(o.CreatedByName) {
		return true
	}

	return false
}

// SetCreatedByName gets a reference to the given string and assigns it to the CreatedByName field.
func (o *Vm) SetCreatedByName(v string) {
	o.CreatedByName = &v
}

// GetCreatedById returns the CreatedById field value if set, zero value otherwise.
func (o *Vm) GetCreatedById() int32 {
	if o == nil || IsNil(o.CreatedById) {
		var ret int32
		return ret
	}
	return *o.CreatedById
}

// GetCreatedByIdOk returns a tuple with the CreatedById field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetCreatedByIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedById) {
		return nil, false
	}
	return o.CreatedById, true
}

// HasCreatedById returns a boolean if a field has been set.
func (o *Vm) HasCreatedById() bool {
	if o != nil && !IsNil(o.CreatedById) {
		return true
	}

	return false
}

// SetCreatedById gets a reference to the given int32 and assigns it to the CreatedById field.
func (o *Vm) SetCreatedById(v int32) {
	o.CreatedById = &v
}

// GetModifiedAt returns the ModifiedAt field value if set, zero value otherwise.
func (o *Vm) GetModifiedAt() string {
	if o == nil || IsNil(o.ModifiedAt) {
		var ret string
		return ret
	}
	return *o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetModifiedAtOk() (*string, bool) {
	if o == nil || IsNil(o.ModifiedAt) {
		return nil, false
	}
	return o.ModifiedAt, true
}

// HasModifiedAt returns a boolean if a field has been set.
func (o *Vm) HasModifiedAt() bool {
	if o != nil && !IsNil(o.ModifiedAt) {
		return true
	}

	return false
}

// SetModifiedAt gets a reference to the given string and assigns it to the ModifiedAt field.
func (o *Vm) SetModifiedAt(v string) {
	o.ModifiedAt = &v
}

// GetModifiedByName returns the ModifiedByName field value if set, zero value otherwise.
func (o *Vm) GetModifiedByName() string {
	if o == nil || IsNil(o.ModifiedByName) {
		var ret string
		return ret
	}
	return *o.ModifiedByName
}

// GetModifiedByNameOk returns a tuple with the ModifiedByName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetModifiedByNameOk() (*string, bool) {
	if o == nil || IsNil(o.ModifiedByName) {
		return nil, false
	}
	return o.ModifiedByName, true
}

// HasModifiedByName returns a boolean if a field has been set.
func (o *Vm) HasModifiedByName() bool {
	if o != nil && !IsNil(o.ModifiedByName) {
		return true
	}

	return false
}

// SetModifiedByName gets a reference to the given string and assigns it to the ModifiedByName field.
func (o *Vm) SetModifiedByName(v string) {
	o.ModifiedByName = &v
}

// GetModifiedById returns the ModifiedById field value if set, zero value otherwise.
func (o *Vm) GetModifiedById() int32 {
	if o == nil || IsNil(o.ModifiedById) {
		var ret int32
		return ret
	}
	return *o.ModifiedById
}

// GetModifiedByIdOk returns a tuple with the ModifiedById field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetModifiedByIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ModifiedById) {
		return nil, false
	}
	return o.ModifiedById, true
}

// HasModifiedById returns a boolean if a field has been set.
func (o *Vm) HasModifiedById() bool {
	if o != nil && !IsNil(o.ModifiedById) {
		return true
	}

	return false
}

// SetModifiedById gets a reference to the given int32 and assigns it to the ModifiedById field.
func (o *Vm) SetModifiedById(v int32) {
	o.ModifiedById = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Vm) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Vm) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Vm) SetName(v string) {
	o.Name = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *Vm) GetProjectId() int32 {
	if o == nil || IsNil(o.ProjectId) {
		var ret int32
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetProjectIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *Vm) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given int32 and assigns it to the ProjectId field.
func (o *Vm) SetProjectId(v int32) {
	o.ProjectId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Vm) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Vm) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Vm) SetStatus(v string) {
	o.Status = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *Vm) GetProvider() VmProvider {
	if o == nil || IsNil(o.Provider) {
		var ret VmProvider
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetProviderOk() (*VmProvider, bool) {
	if o == nil || IsNil(o.Provider) {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *Vm) HasProvider() bool {
	if o != nil && !IsNil(o.Provider) {
		return true
	}

	return false
}

// SetProvider gets a reference to the given VmProvider and assigns it to the Provider field.
func (o *Vm) SetProvider(v VmProvider) {
	o.Provider = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *Vm) GetLocation() VmLocation {
	if o == nil || IsNil(o.Location) {
		var ret VmLocation
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetLocationOk() (*VmLocation, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *Vm) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given VmLocation and assigns it to the Location field.
func (o *Vm) SetLocation(v VmLocation) {
	o.Location = &v
}

// GetDataCenter returns the DataCenter field value if set, zero value otherwise.
func (o *Vm) GetDataCenter() VmDataCenter {
	if o == nil || IsNil(o.DataCenter) {
		var ret VmDataCenter
		return ret
	}
	return *o.DataCenter
}

// GetDataCenterOk returns a tuple with the DataCenter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetDataCenterOk() (*VmDataCenter, bool) {
	if o == nil || IsNil(o.DataCenter) {
		return nil, false
	}
	return o.DataCenter, true
}

// HasDataCenter returns a boolean if a field has been set.
func (o *Vm) HasDataCenter() bool {
	if o != nil && !IsNil(o.DataCenter) {
		return true
	}

	return false
}

// SetDataCenter gets a reference to the given VmDataCenter and assigns it to the DataCenter field.
func (o *Vm) SetDataCenter(v VmDataCenter) {
	o.DataCenter = &v
}

// GetOs returns the Os field value if set, zero value otherwise.
func (o *Vm) GetOs() VmOs {
	if o == nil || IsNil(o.Os) {
		var ret VmOs
		return ret
	}
	return *o.Os
}

// GetOsOk returns a tuple with the Os field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetOsOk() (*VmOs, bool) {
	if o == nil || IsNil(o.Os) {
		return nil, false
	}
	return o.Os, true
}

// HasOs returns a boolean if a field has been set.
func (o *Vm) HasOs() bool {
	if o != nil && !IsNil(o.Os) {
		return true
	}

	return false
}

// SetOs gets a reference to the given VmOs and assigns it to the Os field.
func (o *Vm) SetOs(v VmOs) {
	o.Os = &v
}

// GetVCpu returns the VCpu field value if set, zero value otherwise.
func (o *Vm) GetVCpu() int32 {
	if o == nil || IsNil(o.VCpu) {
		var ret int32
		return ret
	}
	return *o.VCpu
}

// GetVCpuOk returns a tuple with the VCpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetVCpuOk() (*int32, bool) {
	if o == nil || IsNil(o.VCpu) {
		return nil, false
	}
	return o.VCpu, true
}

// HasVCpu returns a boolean if a field has been set.
func (o *Vm) HasVCpu() bool {
	if o != nil && !IsNil(o.VCpu) {
		return true
	}

	return false
}

// SetVCpu gets a reference to the given int32 and assigns it to the VCpu field.
func (o *Vm) SetVCpu(v int32) {
	o.VCpu = &v
}

// GetVCpuType returns the VCpuType field value if set, zero value otherwise.
func (o *Vm) GetVCpuType() string {
	if o == nil || IsNil(o.VCpuType) {
		var ret string
		return ret
	}
	return *o.VCpuType
}

// GetVCpuTypeOk returns a tuple with the VCpuType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetVCpuTypeOk() (*string, bool) {
	if o == nil || IsNil(o.VCpuType) {
		return nil, false
	}
	return o.VCpuType, true
}

// HasVCpuType returns a boolean if a field has been set.
func (o *Vm) HasVCpuType() bool {
	if o != nil && !IsNil(o.VCpuType) {
		return true
	}

	return false
}

// SetVCpuType gets a reference to the given string and assigns it to the VCpuType field.
func (o *Vm) SetVCpuType(v string) {
	o.VCpuType = &v
}

// GetCloudNetworkType returns the CloudNetworkType field value if set, zero value otherwise.
func (o *Vm) GetCloudNetworkType() string {
	if o == nil || IsNil(o.CloudNetworkType) {
		var ret string
		return ret
	}
	return *o.CloudNetworkType
}

// GetCloudNetworkTypeOk returns a tuple with the CloudNetworkType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetCloudNetworkTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CloudNetworkType) {
		return nil, false
	}
	return o.CloudNetworkType, true
}

// HasCloudNetworkType returns a boolean if a field has been set.
func (o *Vm) HasCloudNetworkType() bool {
	if o != nil && !IsNil(o.CloudNetworkType) {
		return true
	}

	return false
}

// SetCloudNetworkType gets a reference to the given string and assigns it to the CloudNetworkType field.
func (o *Vm) SetCloudNetworkType(v string) {
	o.CloudNetworkType = &v
}

// GetRamGb returns the RamGb field value if set, zero value otherwise.
func (o *Vm) GetRamGb() int32 {
	if o == nil || IsNil(o.RamGb) {
		var ret int32
		return ret
	}
	return *o.RamGb
}

// GetRamGbOk returns a tuple with the RamGb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetRamGbOk() (*int32, bool) {
	if o == nil || IsNil(o.RamGb) {
		return nil, false
	}
	return o.RamGb, true
}

// HasRamGb returns a boolean if a field has been set.
func (o *Vm) HasRamGb() bool {
	if o != nil && !IsNil(o.RamGb) {
		return true
	}

	return false
}

// SetRamGb gets a reference to the given int32 and assigns it to the RamGb field.
func (o *Vm) SetRamGb(v int32) {
	o.RamGb = &v
}

// GetDisks returns the Disks field value if set, zero value otherwise.
func (o *Vm) GetDisks() []KubernetesNodeGroupsInnerNodesInnerDisksInner {
	if o == nil || IsNil(o.Disks) {
		var ret []KubernetesNodeGroupsInnerNodesInnerDisksInner
		return ret
	}
	return o.Disks
}

// GetDisksOk returns a tuple with the Disks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetDisksOk() ([]KubernetesNodeGroupsInnerNodesInnerDisksInner, bool) {
	if o == nil || IsNil(o.Disks) {
		return nil, false
	}
	return o.Disks, true
}

// HasDisks returns a boolean if a field has been set.
func (o *Vm) HasDisks() bool {
	if o != nil && !IsNil(o.Disks) {
		return true
	}

	return false
}

// SetDisks gets a reference to the given []KubernetesNodeGroupsInnerNodesInnerDisksInner and assigns it to the Disks field.
func (o *Vm) SetDisks(v []KubernetesNodeGroupsInnerNodesInnerDisksInner) {
	o.Disks = v
}

// GetNetworks returns the Networks field value if set, zero value otherwise.
func (o *Vm) GetNetworks() []KubernetesNodeGroupsInnerNodesInnerNetworksInner {
	if o == nil || IsNil(o.Networks) {
		var ret []KubernetesNodeGroupsInnerNodesInnerNetworksInner
		return ret
	}
	return o.Networks
}

// GetNetworksOk returns a tuple with the Networks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetNetworksOk() ([]KubernetesNodeGroupsInnerNodesInnerNetworksInner, bool) {
	if o == nil || IsNil(o.Networks) {
		return nil, false
	}
	return o.Networks, true
}

// HasNetworks returns a boolean if a field has been set.
func (o *Vm) HasNetworks() bool {
	if o != nil && !IsNil(o.Networks) {
		return true
	}

	return false
}

// SetNetworks gets a reference to the given []KubernetesNodeGroupsInnerNodesInnerNetworksInner and assigns it to the Networks field.
func (o *Vm) SetNetworks(v []KubernetesNodeGroupsInnerNodesInnerNetworksInner) {
	o.Networks = v
}

// GetSecurityGroup returns the SecurityGroup field value if set, zero value otherwise.
func (o *Vm) GetSecurityGroup() VmSecurityGroup {
	if o == nil || IsNil(o.SecurityGroup) {
		var ret VmSecurityGroup
		return ret
	}
	return *o.SecurityGroup
}

// GetSecurityGroupOk returns a tuple with the SecurityGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetSecurityGroupOk() (*VmSecurityGroup, bool) {
	if o == nil || IsNil(o.SecurityGroup) {
		return nil, false
	}
	return o.SecurityGroup, true
}

// HasSecurityGroup returns a boolean if a field has been set.
func (o *Vm) HasSecurityGroup() bool {
	if o != nil && !IsNil(o.SecurityGroup) {
		return true
	}

	return false
}

// SetSecurityGroup gets a reference to the given VmSecurityGroup and assigns it to the SecurityGroup field.
func (o *Vm) SetSecurityGroup(v VmSecurityGroup) {
	o.SecurityGroup = &v
}

// GetSubnetwork returns the Subnetwork field value if set, zero value otherwise.
func (o *Vm) GetSubnetwork() VmSubnetwork {
	if o == nil || IsNil(o.Subnetwork) {
		var ret VmSubnetwork
		return ret
	}
	return *o.Subnetwork
}

// GetSubnetworkOk returns a tuple with the Subnetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetSubnetworkOk() (*VmSubnetwork, bool) {
	if o == nil || IsNil(o.Subnetwork) {
		return nil, false
	}
	return o.Subnetwork, true
}

// HasSubnetwork returns a boolean if a field has been set.
func (o *Vm) HasSubnetwork() bool {
	if o != nil && !IsNil(o.Subnetwork) {
		return true
	}

	return false
}

// SetSubnetwork gets a reference to the given VmSubnetwork and assigns it to the Subnetwork field.
func (o *Vm) SetSubnetwork(v VmSubnetwork) {
	o.Subnetwork = &v
}

// GetSshKeyId returns the SshKeyId field value if set, zero value otherwise.
func (o *Vm) GetSshKeyId() int32 {
	if o == nil || IsNil(o.SshKeyId) {
		var ret int32
		return ret
	}
	return *o.SshKeyId
}

// GetSshKeyIdOk returns a tuple with the SshKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetSshKeyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SshKeyId) {
		return nil, false
	}
	return o.SshKeyId, true
}

// HasSshKeyId returns a boolean if a field has been set.
func (o *Vm) HasSshKeyId() bool {
	if o != nil && !IsNil(o.SshKeyId) {
		return true
	}

	return false
}

// SetSshKeyId gets a reference to the given int32 and assigns it to the SshKeyId field.
func (o *Vm) SetSshKeyId(v int32) {
	o.SshKeyId = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *Vm) GetUserName() string {
	if o == nil || IsNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *Vm) HasUserName() bool {
	if o != nil && !IsNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *Vm) SetUserName(v string) {
	o.UserName = &v
}

// GetUserPassword returns the UserPassword field value if set, zero value otherwise.
func (o *Vm) GetUserPassword() string {
	if o == nil || IsNil(o.UserPassword) {
		var ret string
		return ret
	}
	return *o.UserPassword
}

// GetUserPasswordOk returns a tuple with the UserPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetUserPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.UserPassword) {
		return nil, false
	}
	return o.UserPassword, true
}

// HasUserPassword returns a boolean if a field has been set.
func (o *Vm) HasUserPassword() bool {
	if o != nil && !IsNil(o.UserPassword) {
		return true
	}

	return false
}

// SetUserPassword gets a reference to the given string and assigns it to the UserPassword field.
func (o *Vm) SetUserPassword(v string) {
	o.UserPassword = &v
}

// GetCost returns the Cost field value if set, zero value otherwise.
func (o *Vm) GetCost() VmCost {
	if o == nil || IsNil(o.Cost) {
		var ret VmCost
		return ret
	}
	return *o.Cost
}

// GetCostOk returns a tuple with the Cost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vm) GetCostOk() (*VmCost, bool) {
	if o == nil || IsNil(o.Cost) {
		return nil, false
	}
	return o.Cost, true
}

// HasCost returns a boolean if a field has been set.
func (o *Vm) HasCost() bool {
	if o != nil && !IsNil(o.Cost) {
		return true
	}

	return false
}

// SetCost gets a reference to the given VmCost and assigns it to the Cost field.
func (o *Vm) SetCost(v VmCost) {
	o.Cost = &v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Vm) GetTags() []Tag {
	if o == nil {
		var ret []Tag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Vm) GetTagsOk() ([]Tag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Vm) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Tag and assigns it to the Tags field.
func (o *Vm) SetTags(v []Tag) {
	o.Tags = v
}

func (o Vm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Vm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.CreatedByName) {
		toSerialize["createdByName"] = o.CreatedByName
	}
	if !IsNil(o.CreatedById) {
		toSerialize["createdById"] = o.CreatedById
	}
	if !IsNil(o.ModifiedAt) {
		toSerialize["modifiedAt"] = o.ModifiedAt
	}
	if !IsNil(o.ModifiedByName) {
		toSerialize["modifiedByName"] = o.ModifiedByName
	}
	if !IsNil(o.ModifiedById) {
		toSerialize["modifiedById"] = o.ModifiedById
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Provider) {
		toSerialize["provider"] = o.Provider
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !IsNil(o.DataCenter) {
		toSerialize["dataCenter"] = o.DataCenter
	}
	if !IsNil(o.Os) {
		toSerialize["os"] = o.Os
	}
	if !IsNil(o.VCpu) {
		toSerialize["vCpu"] = o.VCpu
	}
	if !IsNil(o.VCpuType) {
		toSerialize["vCpuType"] = o.VCpuType
	}
	if !IsNil(o.CloudNetworkType) {
		toSerialize["cloudNetworkType"] = o.CloudNetworkType
	}
	if !IsNil(o.RamGb) {
		toSerialize["ramGb"] = o.RamGb
	}
	if !IsNil(o.Disks) {
		toSerialize["disks"] = o.Disks
	}
	if !IsNil(o.Networks) {
		toSerialize["networks"] = o.Networks
	}
	if !IsNil(o.SecurityGroup) {
		toSerialize["securityGroup"] = o.SecurityGroup
	}
	if !IsNil(o.Subnetwork) {
		toSerialize["subnetwork"] = o.Subnetwork
	}
	if !IsNil(o.SshKeyId) {
		toSerialize["sshKeyId"] = o.SshKeyId
	}
	if !IsNil(o.UserName) {
		toSerialize["userName"] = o.UserName
	}
	if !IsNil(o.UserPassword) {
		toSerialize["userPassword"] = o.UserPassword
	}
	if !IsNil(o.Cost) {
		toSerialize["cost"] = o.Cost
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

type NullableVm struct {
	value *Vm
	isSet bool
}

func (v NullableVm) Get() *Vm {
	return v.value
}

func (v *NullableVm) Set(val *Vm) {
	v.value = val
	v.isSet = true
}

func (v NullableVm) IsSet() bool {
	return v.isSet
}

func (v *NullableVm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVm(val *Vm) *NullableVm {
	return &NullableVm{value: val, isSet: true}
}

func (v NullableVm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


